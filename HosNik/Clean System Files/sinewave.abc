.comp 920 0001110100100
.start __sinewave_Start
.depend "_SystemEnumStrict" "20180913120454"
.depend "_SystemStrictLists" "20180913120454"
.depend "StdStrictLists" "20180913120454"
.depend "_SystemEnum" "20180913120454"
.depend "StdEnum" "20180913120454"
.depend "StdMisc" "20180913120454"
.depend "StdFunctions" "20180913120454"
.depend "StdCharList" "20180913120454"
.depend "StdTuple" "20180913120454"
.depend "StdOrdList" "20180913120454"
.depend "StdList" "20180913120454"
.depend "StdClass" "20180913120454"
.depend "StdFile" "20180913120454"
.depend "StdString" "20180913120454"
.depend "_SystemArray" "20180913120454"
.depend "StdArray" "20180913120454"
.depend "StdChar" "20180913120454"
.depend "StdReal" "20180913120454"
.depend "StdInt" "20180913120454"
.depend "StdOverloaded" "20180913120454"
.depend "StdBool" "20180913120454"
.depend "StdEnv" "20180913120454"
.depend "sinewave" "20191117123120"
.module m_sinewave "sinewave" "20191117130311"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod _SystemEnum
.implab e__SystemEnum_s_from_then
.implab e__SystemEnum_s_from_then_to
.impmod StdList
.implab e_StdList_s!!
.implab e_StdList_stakeWhile
.implab e_StdList_slength;47
.impmod StdClass
.impdesc e_StdClass_rIncDec;
.impdesc e_StdClass_rEnum;
.impmod StdReal
.impdesc e_StdReal_d+;1
.implab e_StdReal_s+;1
.impdesc e_StdReal_d-;2
.implab e_StdReal_s-;2
.implab e_StdReal_szero;3
.implab e_StdReal_s*;4
.implab e_StdReal_s/;5
.implab e_StdReal_sone;6
.implab e_StdReal_s==;11
.impdesc e_StdReal_d<;12
.implab e_StdReal_s<;12
.implab e_StdReal_stoReal;13
.implab e_StdReal_ssin;23
.impmod StdInt
.implab e_StdInt_s+;6
.implab e_StdInt_s-;7
.implab e_StdInt_s*;9
.implab e_StdInt_s/;10
.implab e_StdInt_s<;17
.implab e_StdInt_stoInt;22
.impmod StdOverloaded
.impdesc e_StdOverloaded_r+;
.impdesc e_StdOverloaded_r-;
.impdesc e_StdOverloaded_rzero;
.impdesc e_StdOverloaded_rone;
.impdesc e_StdOverloaded_r<;
.export __sinewave_Start
.o 0 0
__sinewave_Start
	build _ 0 n7
.d 1 0
	jmp _driver
.n 0 _
.o 1 0
n7
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea7
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 0 0
ea7
.o 0 0
s7
	create
	buildI 3
	buildI 100
.d 3 0
	jsr s4
.o 1 0
	buildR 1.0
	build e_sinewave_dgenerateSine 1 e_sinewave_ngenerateSine
	create
	push_a 2
	update_a 1 3
	update_a 2 1
	update_a 0 2
	pop_a 1
.d 3 0
	jsr s1
.o 1 0
.d 1 0
	jmp e_StdList_slength;47
.export e_sinewave_sgetIndexes
.export e_sinewave_eagetIndexes
.descexp e_sinewave_dgetIndexes e_sinewave_ngetIndexes e_sinewave_lgetIndexes 2 0 "getIndexes"
.a 2 e_sinewave_eagetIndexes
.o 2 0
e_sinewave_lgetIndexes
	push_args 0 1 1
	update_a 2 1
	create
	update_a 0 3
	pop_a 1
.d 3 0
	jmp e_sinewave_eagetIndexes
.n 2 e_sinewave_dgetIndexes e_sinewave_eagetIndexes
.o 1 0
e_sinewave_ngetIndexes
	push_node _cycle_in_spine 2
.o 3 0
e_sinewave_eagetIndexes
.o 3 0
e_sinewave_sgetIndexes
.o 3 0
s4
	push_a 0
	push_a 2
	build _ 2 n19
	pushR 0.0
	buildR_b 0
	pop_b 1
	pushR 1.0
	buildR_b 0
	pop_b 1
	buildh e_StdReal_d-;2 0
	buildh e_StdReal_d+;1 0
	build_r e_StdClass_rIncDec; 4 0 0 0
	updatepop_a 0 4
	buildh e_StdReal_d<;12 0
	create
	buildR 0.0
	push_a 4
	update_a 2 5
	update_a 4 2
	update_a 0 4
	update_a 3 0
	update_a 1 3
	update_a 0 1
	pop_a 1
	update_a 4 6
	update_a 3 5
	update_a 2 4
	update_a 1 3
	updatepop_a 0 2
.d 5 0
	jsr e__SystemEnum_s_from_then
.o 1 0
	buildh d11 0
.d 3 0
	jmp e_StdList_stakeWhile
.n 2 _ ea19
.o 1 0
n19
	push_node _cycle_in_spine 2
.o 3 0
ea19
.o 3 0
s19
	push_a 1
	jsr_eval 0
	pushI_a 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	mulI
	ItoR
	pushI 44100
	ItoR
	pop_a 2
	divR
	fillR_b 0 0
	pop_b 1
.d 1 0
	rtn
.desc d11 _hnf l11 1 0 "<lambda>[line:34];44;15"
.o 2 0
l11
	pop_a 1
.d 1 0
	jsr ea11
.o 0 1 b
	buildB_b 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
ea11
	jsr_eval 0
	pushR_a 0
	pop_a 1
.o 0 1 r
s11
	push_b 0
	RtoI
	pushI 2205
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_b 1 2
	updatepop_b 0 1
	ltI
.d 0 1 b
	rtn
.export e_sinewave_sgenerateSine
.export e_sinewave_eagenerateSine
.descexp e_sinewave_dgenerateSine e_sinewave_ngenerateSine e_sinewave_lgenerateSine 1 0 "generateSine"
.o 2 0
e_sinewave_lgenerateSine
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_sinewave_eagenerateSine
.n 1 e_sinewave_dgenerateSine e_sinewave_eagenerateSine
.o 1 0
e_sinewave_ngenerateSine
	push_node _cycle_in_spine 1
.o 2 0
e_sinewave_eagenerateSine
.o 2 0
e_sinewave_sgenerateSine
.o 2 0
s2
	pushI 20
	pushI 44100
	divI
	ItoR
	pushR 1.0
	push_b 1
	subR
	buildR_b 0
	pop_b 1
	pushR 0.0
	buildR_b 0
	pop_b 1
	pushR 1.0
	buildR_b 0
	pop_b 1
	buildh e_StdReal_d-;2 0
	buildh e_StdReal_d+;1 0
	build_r e_StdClass_rIncDec; 4 0 0 0
	updatepop_a 0 4
	buildh e_StdReal_d<;12 0
	create
	buildR 1.0
	buildR 0.0
	push_a 5
	update_a 3 6
	update_a 1 3
	update_a 4 1
	update_a 2 4
	update_a 5 2
	update_a 0 5
	pop_a 1
.d 6 0
	jsr e__SystemEnum_s_from_then_to
.o 1 0
	buildR_b 0
	push_a 2
	update_a 2 3
	update_a 1 2
	updatepop_a 0 1
	pop_b 1
.d 4 0
	jmp s8
.n 3 _ ea8
.o 1 0
n8
	push_node _cycle_in_spine 3
.o 4 0
ea8
	jsr_eval 2
.o 4 0
s8
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 4 0
	jmp s13
.o 4 0
s13
	eq_desc _Cons 2 0
	jmp_true case.1
	jmp case.2
case.1
	repl_args 2 2
	push_a 1
	push_a 4
	push_a 4
	build _ 3 n8
	push_a 4
	push_a 2
	push_a 5
	build _ 3 n20
	fillh _Cons 2 6
	pop_a 4
.d 1 0
	rtn
case.2
	fillh _Nil 0 3
	pop_a 3
.d 1 0
	rtn
.n 3 _ ea20
.o 1 0
n20
	push_node _cycle_in_spine 3
.o 4 0
ea20
.o 4 0
s20
	push_a 2
	jsr_eval 0
	pushR_a 3
	pop_a 1
	push_a 1
	jsr_eval 0
	pushR_a 2
	pop_a 1
	pushR 2.0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	mulR
	pushR 3.1415926535898
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	mulR
	divR
	pushR 0.0
	addR
	sinR
	push_a 0
	jsr_eval 0
	pushR_a 1
	pop_a 1
	pop_a 3
	mulR
	fillR_b 0 0
	pop_b 1
.d 1 0
	rtn
.export e_sinewave_sgetSubset
.export e_sinewave_eagetSubset
.descexp e_sinewave_dgetSubset e_sinewave_ngetSubset e_sinewave_lgetSubset 2 0 "getSubset"
.a 2 e_sinewave_eagetSubset
.o 2 0
e_sinewave_lgetSubset
	push_args 0 1 1
	update_a 2 1
	create
	update_a 0 3
	pop_a 1
.d 3 0
	jmp e_sinewave_eagetSubset
.n 2 e_sinewave_dgetSubset e_sinewave_eagetSubset
.o 1 0
e_sinewave_ngetSubset
	push_node _cycle_in_spine 2
.o 3 0
e_sinewave_sgetSubset
.o 3 0
e_sinewave_eagetSubset
	jsr_eval 1
.o 3 0
s1
	push_a 1
	push_a 1
	update_a 1 3
	updatepop_a 0 2
.d 3 0
	jmp s9
.n 2 _ ea9
.o 1 0
n9
	push_node _cycle_in_spine 2
.o 3 0
ea9
	jsr_eval 1
.o 3 0
s9
	push_a 0
	push_a 2
	update_a 1 3
	updatepop_a 0 2
.d 3 0
	jmp s12
.o 3 0
s12
	eq_desc _Cons 2 0
	jmp_true case.3
	jmp case.4
case.3
	repl_args 2 2
	push_a 1
	push_a 3
	build _ 2 n9
	push_a 3
	push_a 2
	build e_sinewave_dgetValue 2 e_sinewave_ngetValue
	fillh _Cons 2 5
	pop_a 3
.d 1 0
	rtn
case.4
	fillh _Nil 0 2
	pop_a 2
.d 1 0
	rtn
.export e_sinewave_sgetValue
.descexp e_sinewave_dgetValue e_sinewave_ngetValue e_sinewave_lgetValue 2 0 "getValue"
.a 0 a5
.o 2 0
e_sinewave_lgetValue
	repl_args 1 1
.o 2 0
a5
.d 2 0
	jsr ea5
.o 0 1 r
	buildR_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_sinewave_dgetValue
.o 1 0
e_sinewave_ngetValue
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea5
.o 0 1 r
	fillR_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
e_sinewave_sgetValue
.o 2 0
ea5
	jsr_eval 1
	jsr_eval 0
	pushR_a 0
	pop_a 1
.o 1 1 r
s5
	push_b 0
.d 0 1 r
	jsr s3
.o 0 1 i
	ItoR
	push_b 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqR
	jmp_false else.5
	push_b 0
	updatepop_b 0 1
.d 0 1 r
	jsr s3
.o 0 1 i
	push_a 0
	updatepop_a 0 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	pushR_a 0
	pop_a 1
.d 0 1 r
	rtn
else.5
	push_b 0
.d 0 1 r
	jsr s3
.o 0 1 i
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	addI
	push_b 1
.d 0 1 r
	jsr s3
.o 0 1 i
	push_a 0
	push_b 2
	updatepop_a 0 1
	update_b 2 3
	update_b 1 2
	updatepop_b 0 1
.d 1 3 rii
	jmp s6
.export e_sinewave_sinterpolate
.descexp e_sinewave_dinterpolate e_sinewave_ninterpolate e_sinewave_linterpolate 4 0 "interpolate"
.a 0 a6
.o 2 0
e_sinewave_linterpolate
	repl_args 3 3
.o 4 0
a6
.d 4 0
	jsr ea6
.o 0 1 r
	buildR_b 0
	pop_b 1
.d 1 0
	rtn
.n 4 e_sinewave_dinterpolate
.o 1 0
e_sinewave_ninterpolate
	push_node _cycle_in_spine 4
.d 4 0
	jsr ea6
.o 0 1 r
	fillR_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 4 0
e_sinewave_sinterpolate
.o 4 0
ea6
	jsr_eval 3
	jsr_eval 2
	jsr_eval 1
	jsr_eval 0
	pushI_a 2
	pushI_a 1
	pushR_a 0
	pop_a 3
.o 1 3 rii
s6
	push_b 1
	push_b 3
	subI
	ItoR
	push_b 3
	push_a 0
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	pushR_a 0
	pop_a 1
	push_b 3
	push_a 0
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	pushR_a 0
	pop_a 1
	subR
	push_b 3
	ItoR
	push_b 3
	subR
	mulR
	divR
	push_b 2
	push_a 0
	updatepop_a 0 1
.d 1 1 i
	jsr e_StdList_s!!
.o 1 0
	pushR_a 0
	pop_a 1
	update_b 1 4
	updatepop_b 0 3
	addR
.d 0 1 r
	rtn
.export e_sinewave_sfloor
.descexp e_sinewave_dfloor e_sinewave_nfloor e_sinewave_lfloor 1 0 "floor"
.o 2 0
e_sinewave_lfloor
	pop_a 1
.d 1 0
	jsr ea3
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.n 1 e_sinewave_dfloor
.o 1 0
e_sinewave_nfloor
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea3
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
e_sinewave_sfloor
.o 1 0
ea3
	jsr_eval 0
	pushR_a 0
	pop_a 1
.o 0 1 r
s3
	push_b 0
	RtoI
	ItoR
	push_b 1
	ltR
	jmp_false else.6
	push_b 0
	RtoI
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_b 1 2
	updatepop_b 0 1
	subI
.d 0 1 i
	rtn
else.6
	push_b 0
	updatepop_b 0 1
	RtoI
.d 0 1 i
	rtn
