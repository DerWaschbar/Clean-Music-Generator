.comp 920 0001110100100
.start __PcmWav_Start
.depend "midlayer" "20191117130337"
.depend "_SystemEnumStrict" "20180913120454"
.depend "_SystemStrictLists" "20180913120454"
.depend "StdStrictLists" "20180913120454"
.depend "_SystemEnum" "20180913120454"
.depend "StdEnum" "20180913120454"
.depend "StdMisc" "20180913120454"
.depend "StdFunctions" "20180913120454"
.depend "StdCharList" "20180913120454"
.depend "StdTuple" "20180913120454"
.depend "StdOrdList" "20180913120454"
.depend "StdList" "20180913120454"
.depend "StdClass" "20180913120454"
.depend "StdFile" "20180913120454"
.depend "StdString" "20180913120454"
.depend "_SystemArray" "20180913120454"
.depend "StdArray" "20180913120454"
.depend "StdChar" "20180913120454"
.depend "StdReal" "20180913120454"
.depend "StdInt" "20180913120454"
.depend "StdOverloaded" "20180913120454"
.depend "StdBool" "20180913120454"
.depend "StdEnv" "20180913120454"
.depend "PcmWav.Byte" "20191028110203"
.depend "PcmWav" "20191117130149"
.module m_PcmWav "PcmWav" "20191117130310"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod midlayer
.implab e_midlayer_ssineToByte
.impmod StdFile
.implab e_StdFile_sfwritec
.implab e_StdFile_sfwrites
.implab e_StdFile_sfclose;30
.implab e_StdFile_sfopen;31
.impmod StdInt
.implab e_StdInt_s+;6
.implab e_StdInt_s*;9
.implab e_StdInt_sisEven;18
.impmod PcmWav.Byte
.implab e_PcmWav.Byte_snatToBytesLE
.export e_PcmWav_rPcmWavParams
.record e_PcmWav_rPcmWavParams iiii 0 4 "PcmWavParams"
.descexp e_PcmWav_tPcmWavParams e_PcmWav_cPcmWavParams _hnf 4 1 "PcmWavParams"
.n 4 e_PcmWav_tPcmWavParams
.o 1 0
e_PcmWav_cPcmWavParams
	push_node _cycle_in_spine 4
	jsr_eval 3
	jsr_eval 2
	jsr_eval 1
	jsr_eval 0
	pushI_a 3
	pushI_a 2
	pushI_a 1
	pushI_a 0
	pop_a 4
.impmod PcmWav
.impdesc e_PcmWav_rPcmWavParams
	fill_r e_PcmWav_rPcmWavParams 0 4 0 0 0
	pop_b 4
.d 1 0
	rtn
.export e_PcmWav_dPcmWavParams.numChannels
.export e_PcmWav_nPcmWavParams.numChannels
.descs e_PcmWav_dPcmWavParams.numChannels e_PcmWav_nPcmWavParams.numChannels INT 1 0 "PcmWavParams.numChannels"
.n -3 e_PcmWav_dPcmWavParams.numChannels
.o 1 0
e_PcmWav_nPcmWavParams.numChannels
	push_node _cycle_in_spine 1
	jsr_eval 0
	push_r_args_b 0 0 4 1 1
	pop_a 1
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.export e_PcmWav_dPcmWavParams.numBlocks
.export e_PcmWav_nPcmWavParams.numBlocks
.descs e_PcmWav_dPcmWavParams.numBlocks e_PcmWav_nPcmWavParams.numBlocks INT 3 0 "PcmWavParams.numBlocks"
.n -3 e_PcmWav_dPcmWavParams.numBlocks
.o 1 0
e_PcmWav_nPcmWavParams.numBlocks
	push_node _cycle_in_spine 1
	jsr_eval 0
	push_r_args_b 0 0 4 2 1
	pop_a 1
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.export e_PcmWav_dPcmWavParams.samplingRate
.export e_PcmWav_nPcmWavParams.samplingRate
.descs e_PcmWav_dPcmWavParams.samplingRate e_PcmWav_nPcmWavParams.samplingRate INT 4 0 "PcmWavParams.samplingRate"
.n -3 e_PcmWav_dPcmWavParams.samplingRate
.o 1 0
e_PcmWav_nPcmWavParams.samplingRate
	push_node _cycle_in_spine 1
	jsr_eval 0
	push_r_args_b 0 0 4 3 1
	pop_a 1
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.export e_PcmWav_dPcmWavParams.bytesPerSample
.export e_PcmWav_nPcmWavParams.bytesPerSample
.descs e_PcmWav_dPcmWavParams.bytesPerSample e_PcmWav_nPcmWavParams.bytesPerSample INT 5 0 "PcmWavParams.bytesPerSample"
.n -3 e_PcmWav_dPcmWavParams.bytesPerSample
.o 1 0
e_PcmWav_nPcmWavParams.bytesPerSample
	push_node _cycle_in_spine 1
	jsr_eval 0
	push_r_args_b 0 0 4 4 1
	pop_a 1
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.export __PcmWav_Start
.o 0 0
__PcmWav_Start
	buildI 65536
	build _ 1 n8
.d 1 0
	jmp _driver
.n 1 _ ea8
.o 1 0
n8
	push_node _cycle_in_spine 1
.o 2 0
ea8
	jsr_eval 0
.o 2 0
s8
	push_a 0
	updatepop_a 0 1
.d 2 0
	jmp s1
.export e_PcmWav_stest
.export e_PcmWav_eatest
.descexp e_PcmWav_dtest e_PcmWav_ntest e_PcmWav_ltest 1 0 "test"
.o 2 0
e_PcmWav_ltest
	update_a 1 0
	create
	update_a 0 2
	pop_a 1
.d 2 0
	jmp e_PcmWav_eatest
.n 1 e_PcmWav_dtest e_PcmWav_eatest
.o 1 0
e_PcmWav_ntest
	push_node _cycle_in_spine 1
.o 2 0
e_PcmWav_eatest
	jsr_eval 0
.o 2 0
e_PcmWav_stest
.o 2 0
s1
	push_a 0
	pushI 4
	buildAC "test.wav"
	update_a 1 2
	updatepop_a 0 1
.d 2 1 i
	jsr e_StdFile_sfopen;31
.o 1 3 bf
	create
	buildI 3
	buildI 100
	buildR 0.5
	pop_b 1
.d 4 0
	jsr e_midlayer_ssineToByte
.o 1 0
	pushI 44100
	pushI 3
	mulI
	pushI 1
	pushI 44100
	pushI 1
	push_b 3
	update_b 3 4
	update_b 2 3
	update_b 0 2
	pop_b 1
	push_b 5
	push_b 5
	push_b 5
	update_b 2 6
	update_b 4 2
	update_b 0 4
	update_b 5 0
	update_b 1 5
	update_b 3 1
	update_b 0 3
	pop_b 1
	update_b 5 7
	update_b 4 6
	update_b 3 5
	update_b 2 4
	update_b 1 3
	updatepop_b 0 2
.d 1 6 iiiif
	jsr s7
.o 0 2 f
	push_a 0
	push_b 1
	push_b 1
	update_b 1 3
	updatepop_b 0 2
	updatepop_a 0 1
.d 1 2 f
	jsr e_StdFile_sfclose;30
.o 1 1 b
	pop_b 1
	fill_a 0 1
	pop_a 1
.d 1 0
	rtn
.o 1 6 iiiif
s7
	push_b 1
	push_b 1
	push_b 5
	mulI
	mulI
	push_b 0
	pushI 1
	and%
	pushI 0
	eqI
.d 0 1 b
	jsr s9
.o 0 1 i
	push_b 1
	addI
	push_b 7
	push_b 7
	push_b 2
	update_b 2 3
	update_b 1 2
	update_b 0 1
	pop_b 1
.d 0 3 if
	jsr s4
.o 0 2 f
	push_b 1
	push_b 1
	push_b 8
	push_b 8
	push_b 8
	push_b 8
	update_b 5 7
	update_b 4 6
	update_b 3 5
	update_b 2 4
	update_b 1 3
	updatepop_b 0 2
.d 0 6 iiiif
	jsr s5
.o 0 2 f
	push_b 1
	push_b 1
	push_a 0
	push_b 4
	update_b 2 11
	update_b 1 10
	updatepop_b 0 9
	updatepop_a 0 1
.d 1 3 if
	jsr s6
.o 0 2 f
.d 0 2 f
	rtn
.o 0 1 b
s9
	eqB_b TRUE 0
	jmp_true case.1
	jmp case.2
case.1
	pop_b 1
	pushI 36
.d 0 1 i
	rtn
case.2
	pop_b 1
	pushI 37
.d 0 1 i
	rtn
.o 1 3 if
s6
	push_b 2
	push_b 2
	buildAC "data"
.d 1 2 f
	jsr writeFS
.o 0 2 f
	push_b 1
	push_b 1
	push_b 4
	pushI 4
	update_b 3 5
	update_b 2 4
	update_b 1 3
	updatepop_b 0 2
.d 0 4 iif
	jsr s3
.o 0 2 f
	push_b 1
	push_b 1
	push_a 0
	update_b 1 3
	updatepop_b 0 2
	updatepop_a 0 1
.d 1 2 f
	jsr s2
.o 0 2 f
	push_b 2
	pushI 1
	and%
	pushI 0
	eqI
	jmp_false else.3
	update_b 1 4
	update_b 0 3
	pop_b 3
.d 0 2 f
	rtn
else.3
	push_b 1
	push_b 1
	pushC '\000'
	update_b 2 7
	update_b 1 6
	updatepop_b 0 5
.d 0 3 c f
	jsr writeFC
.o 0 2 f
.d 0 2 f
	rtn
.o 0 6 iiiif
s5
	push_b 5
	push_b 5
	buildAC "fmt "
.d 1 2 f
	jsr writeFS
.o 0 2 f
	push_b 1
	push_b 1
	pushI 16
	pushI 4
	update_b 3 5
	update_b 2 4
	update_b 1 3
	updatepop_b 0 2
.d 0 4 iif
	jsr s3
.o 0 2 f
	push_b 1
	push_b 1
	pushI 1
	pushI 2
	update_b 3 5
	update_b 2 4
	update_b 1 3
	updatepop_b 0 2
.d 0 4 iif
	jsr s3
.o 0 2 f
	push_b 2
	push_b 2
	push_b 2
	pushI 2
	push_b 3
	update_b 3 4
	update_b 2 3
	update_b 0 2
	pop_b 1
	update_b 3 5
	update_b 2 4
	update_b 1 3
	updatepop_b 0 2
.d 0 4 iif
	jsr s3
.o 0 2 f
	push_b 4
	push_b 2
	push_b 2
	pushI 4
	push_b 3
	update_b 3 4
	update_b 2 3
	update_b 0 2
	pop_b 1
	update_b 3 5
	update_b 2 4
	update_b 1 3
	updatepop_b 0 2
.d 0 4 iif
	jsr s3
.o 0 2 f
	push_b 2
	push_b 6
	push_b 6
	mulI
	mulI
	push_b 2
	push_b 2
	pushI 4
	push_b 3
	update_b 3 4
	update_b 2 3
	update_b 0 2
	pop_b 1
	update_b 3 5
	update_b 2 4
	update_b 1 3
	updatepop_b 0 2
.d 0 4 iif
	jsr s3
.o 0 2 f
	push_b 2
	push_b 6
	mulI
	push_b 2
	push_b 2
	pushI 2
	push_b 3
	update_b 3 4
	update_b 2 3
	update_b 0 2
	pop_b 1
	update_b 3 5
	update_b 2 4
	update_b 1 3
	updatepop_b 0 2
.d 0 4 iif
	jsr s3
.o 0 2 f
	push_b 5
	pushI 8
	mulI
	push_b 2
	push_b 2
	pushI 2
	push_b 3
	update_b 3 4
	update_b 2 3
	update_b 0 2
	pop_b 1
	update_b 3 11
	update_b 2 10
	update_b 1 9
	updatepop_b 0 8
.d 0 4 iif
	jsr s3
.o 0 2 f
.d 0 2 f
	rtn
.o 0 3 if
s4
	push_b 2
	push_b 2
	buildAC "RIFF"
.d 1 2 f
	jsr writeFS
.o 0 2 f
	push_b 1
	push_b 1
	push_b 4
	pushI 4
	update_b 3 8
	update_b 2 7
	update_b 1 6
	updatepop_b 0 5
.d 0 4 iif
	jsr s3
.o 0 2 f
	push_b 1
	push_b 1
	buildAC "WAVE"
	update_b 1 3
	updatepop_b 0 2
.d 1 2 f
	jsr writeFS
.o 0 2 f
.d 0 2 f
	rtn
.o 0 4 iif
s3
	create
	push_b 1
	push_b 1
	update_b 1 3
	updatepop_b 0 2
.d 1 2 ii
	jsr e_PcmWav.Byte_snatToBytesLE
.o 1 0
	push_b 1
	push_b 1
	update_b 1 3
	updatepop_b 0 2
.d 1 2 f
	jmp s2
.o 1 2 f
s2
	eq_desc _Nil 0 0
	jmp_true case.4
	jmp case.5
case.4
	pop_a 1
.d 0 2 f
	rtn
case.5
	repl_args 2 2
	push_a 0
	jsr_eval 0
	pushC_a 1
	pop_a 1
	push_b 2
	push_b 2
	push_b 2
	update_b 2 3
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_b 2 4
	update_b 1 3
	updatepop_b 0 2
	pop_a 1
.d 0 3 c f
	jsr writeFC
.o 0 2 f
	push_a 0
	jsr_eval 0
	push_b 1
	push_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 1 2 f
	jmp s2
