.comp 920 0101110100100
.start _nostart_
.depend "_SystemEnumStrict"
.depend "_SystemStrictLists"
.depend "StdStrictLists"
.depend "_SystemEnum"
.depend "StdEnum"
.depend "StdMisc"
.depend "StdFunctions"
.depend "StdCharList"
.depend "StdTuple"
.depend "StdOrdList"
.depend "StdList"
.depend "StdClass"
.depend "StdFile"
.depend "StdString"
.depend "_SystemArray"
.depend "StdArray"
.depend "StdChar"
.depend "StdReal"
.depend "StdInt"
.depend "StdOverloaded"
.depend "StdBool"
.depend "StdEnv"
.depend "utils"
.endinfo
.module m_utils "utils"
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdList
.implab e_StdList_s++
.impdesc e_StdList_dhd
.implab e_StdList_nhd _
.implab e_StdList_stl
.impdesc e_StdList_dlast
.implab e_StdList_nlast _
.impdesc e_StdList_dinit
.implab e_StdList_ninit e_StdList_eainit
.impmod StdReal
.impdesc e_StdReal_d+;1
.implab e_StdReal_n+;1
.impdesc e_StdReal_d-;2
.implab e_StdReal_s-;2
.implab e_StdReal_n-;2
.implab e_StdReal_s*;4
.implab e_StdReal_s/;5
.implab e_StdReal_sabs;8
.implab e_StdReal_s<;12
.implab e_StdReal_stoReal;13
.impmod StdInt
.impdesc e_StdInt_d+;6
.implab e_StdInt_n+;6
.impdesc e_StdInt_d-;7
.implab e_StdInt_s-;7
.implab e_StdInt_n-;7
.implab e_StdInt_s<;17
.implab e_StdInt_stoInt;22
.export e_utils_ssubtractLists
.export e_utils_easubtractLists
.descexp e_utils_dsubtractLists e_utils_nsubtractLists e_utils_lsubtractLists 2 0 "subtractLists"
.a 2 e_utils_easubtractLists
.o 2 0
e_utils_lsubtractLists
	push_args 0 1 1
	update_a 2 1
	create
	update_a 0 3
	pop_a 1
.d 3 0
	jmp e_utils_easubtractLists
.n 2 e_utils_dsubtractLists e_utils_easubtractLists
.o 1 0
e_utils_nsubtractLists
	push_node _cycle_in_spine 2
.o 3 0
e_utils_ssubtractLists
.o 3 0
e_utils_easubtractLists
	jsr_eval 1
	jsr_eval 0
.o 3 0
s5
	eq_desc _Nil 0 0
	jmp_true case.1
	jmp case.2
case.1
	eq_desc _Nil 0 1
	jmp_true case.3
	jmp s5.1
case.3
	fillh _Nil 0 2
	pop_a 2
.d 1 0
	rtn
case.2
	repl_args 2 2
	jsr_eval 1
	eq_desc _Nil 0 1
	jmp_true case.4
	jmp case.5
case.4
	eq_desc _Cons 2 2
	jmp_true case.6
	jmp case.5
case.6
	push_args 2 2 2
	jsr_eval 1
	eq_desc _Nil 0 1
	jmp_true case.7
	pop_a 2
	jmp case.5
case.7
	buildh _Nil 0
	push_a 1
	push_a 4
	build _ 2 e_StdReal_n-;2
	fillh _Cons 2 7
	pop_a 5
.d 1 0
	rtn
case.5
	eq_desc _Cons 2 2
	jmp_true case.8
	pop_a 1
	jmp s5.1
case.8
	push_args 2 2 2
	buildh _Nil 0
	update_a 0 5
	pop_a 1
	push_a 1
	push_a 4
	build e_utils_dsubtractLists 2 e_utils_nsubtractLists
	buildh _Nil 0
	push_a 2
	push_a 5
	build _ 2 e_StdReal_n-;2
	buildh _Cons 2
	update_a 1 6
	updatepop_a 0 5
.d 3 0
	jmp e_StdList_s++
s5.1
	pop_a 3
	pushD m_utils
	pushD e_utils_dsubtractLists
.d 0 2 ii
	jmp _match_error
.export e_utils_ssumLists
.export e_utils_easumLists
.descexp e_utils_dsumLists e_utils_nsumLists e_utils_lsumLists 2 0 "sumLists"
.a 2 e_utils_easumLists
.o 2 0
e_utils_lsumLists
	push_args 0 1 1
	update_a 2 1
	create
	update_a 0 3
	pop_a 1
.d 3 0
	jmp e_utils_easumLists
.n 2 e_utils_dsumLists e_utils_easumLists
.o 1 0
e_utils_nsumLists
	push_node _cycle_in_spine 2
.o 3 0
e_utils_ssumLists
.o 3 0
e_utils_easumLists
	jsr_eval 1
	jsr_eval 0
.o 3 0
s4
	eq_desc _Nil 0 0
	jmp_true case.9
	jmp case.10
case.9
	eq_desc _Nil 0 1
	jmp_true case.11
	jmp s4.1
case.11
	fillh _Nil 0 2
	pop_a 2
.d 1 0
	rtn
case.10
	repl_args 2 2
	jsr_eval 1
	eq_desc _Nil 0 1
	jmp_true case.12
	jmp case.13
case.12
	eq_desc _Cons 2 2
	jmp_true case.14
	jmp case.13
case.14
	push_args 2 2 2
	jsr_eval 1
	eq_desc _Nil 0 1
	jmp_true case.15
	pop_a 2
	jmp case.13
case.15
	buildh _Nil 0
	push_a 1
	push_a 4
	build _ 2 e_StdReal_n+;1
	fillh _Cons 2 7
	pop_a 5
.d 1 0
	rtn
case.13
	eq_desc _Cons 2 2
	jmp_true case.16
	pop_a 1
	jmp s4.1
case.16
	push_args 2 2 2
	buildh _Nil 0
	update_a 0 5
	pop_a 1
	push_a 1
	push_a 4
	build e_utils_dsumLists 2 e_utils_nsumLists
	buildh _Nil 0
	push_a 2
	push_a 5
	build _ 2 e_StdReal_n+;1
	buildh _Cons 2
	update_a 1 6
	updatepop_a 0 5
.d 3 0
	jmp e_StdList_s++
s4.1
	pop_a 3
	pushD m_utils
	pushD e_utils_dsumLists
.d 0 2 ii
	jmp _match_error
.export e_utils_smyRem
.descexp e_utils_dmyRem e_utils_nmyRem e_utils_lmyRem 2 0 "myRem"
.a 0 a3
.o 2 0
e_utils_lmyRem
	repl_args 1 1
.o 2 0
a3
.d 2 0
	jsr ea3
.o 0 1 r
	buildR_b 0
	pop_b 1
.d 1 0
	rtn
.n 2 e_utils_dmyRem
.o 1 0
e_utils_nmyRem
	push_node _cycle_in_spine 2
.d 2 0
	jsr ea3
.o 0 1 r
	fillR_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 0
e_utils_smyRem
.o 2 0
ea3
	jsr_eval 1
	jsr_eval 0
	pushR_a 1
	pushR_a 0
	pop_a 2
.o 0 2 rr
s3
	push_b 1
	push_b 1
	update_b 1 2
	updatepop_b 0 1
	divR
	push_b 0
.d 0 1 r
	jsr s2
.o 0 1 i
	ItoR
	push_b 1
	subR
	absR
	push_b 2
	update_b 1 3
	updatepop_b 0 2
	mulR
.d 0 1 r
	rtn
.export e_utils_sfloor
.descexp e_utils_dfloor e_utils_nfloor e_utils_lfloor 1 0 "floor"
.o 2 0
e_utils_lfloor
	pop_a 1
.d 1 0
	jsr ea2
.o 0 1 i
	buildI_b 0
	pop_b 1
.d 1 0
	rtn
.n 1 e_utils_dfloor
.o 1 0
e_utils_nfloor
	push_node _cycle_in_spine 1
.d 1 0
	jsr ea2
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 1 0
e_utils_sfloor
.o 1 0
ea2
	jsr_eval 0
	pushR_a 0
	pop_a 1
.o 0 1 r
s2
	push_b 0
	RtoI
	ItoR
	push_b 1
	ltR
	jmp_false else.17
	push_b 0
	RtoI
	pushI 1
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	update_b 1 2
	updatepop_b 0 1
	subI
.d 0 1 i
	rtn
else.17
	push_b 0
	updatepop_b 0 1
	RtoI
.d 0 1 i
	rtn
.export e_utils_sphaseShift
.export e_utils_eaphaseShift
.descexp e_utils_dphaseShift e_utils_nphaseShift e_utils_lphaseShift 2 0 "phaseShift"
.a 2 e_utils_eaphaseShift
.o 2 0
e_utils_lphaseShift
	push_args 0 1 1
	update_a 2 1
	create
	update_a 0 3
	pop_a 1
.d 3 0
	jmp e_utils_eaphaseShift
.n 2 e_utils_dphaseShift e_utils_eaphaseShift
.o 1 0
e_utils_nphaseShift
	push_node _cycle_in_spine 2
.o 3 0
e_utils_sphaseShift
.o 3 0
e_utils_eaphaseShift
	jsr_eval 0
.o 3 0
s1
	eq_desc _Nil 0 0
	jmp_true case.18
	jmp case.19
case.18
	fillh _Nil 0 2
	pop_a 2
.d 1 0
	rtn
case.19
	jsr_eval 1
	eqI_a 0 1
	jmp_true case.20
	jmp case.21
case.20
	fill_a 0 2
	pop_a 2
.d 1 0
	rtn
case.21
	pushI_a 1
	pushI 0
	ltI
	jmp_false else.22
	buildI 1
	push_a 2
	build _ 2 e_StdInt_n-;7
	buildh _Nil 0
	push_a 2
	build e_StdList_dhd 1 e_StdList_nhd
	buildh _Cons 2
	create
	push_a 3
	buildh _Nil 0
	update_a 0 5
	update_a 0 6
	pop_a 1
.d 2 0
	jsr e_StdList_stl
.o 1 0
	create
	push_a 2
	update_a 1 3
	update_a 2 1
	update_a 0 2
	pop_a 1
.d 3 0
	jsr e_StdList_s++
.o 1 0
	update_a 1 3
	updatepop_a 0 2
.d 3 0
	jmp s1
else.22
	buildI 1
	push_a 2
	build _ 2 e_StdInt_n+;6
	push_a 1
	build e_StdList_dinit 1 e_StdList_ninit
	push_a 2
	build e_StdList_dlast 1 e_StdList_nlast
	buildh _Cons 2
	update_a 1 3
	updatepop_a 0 2
.d 3 0
	jmp s1
.impmod _system
.implab _match_error
